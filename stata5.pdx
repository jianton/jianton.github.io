<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="" xml:lang="">
<head>
  <meta charset="utf-8" />
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <meta name="author" content="José-Ignacio Antón" />
  <title>Sesión 5. Reproducibilidad, flujos de trabajo e integración con otro software</title>
  <style>
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    span.underline{text-decoration: underline;}
    div.column{display: inline-block; vertical-align: top; width: 50%;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    ul.task-list{list-style: none;}
  </style>
  <script src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js" type="text/javascript"></script>
  <!--[if lt IE 9]>
    <script src="//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js"></script>
  <![endif]-->
</head>
<body>
<header id="title-block-header">
<h1 class="title">Sesión 5. Reproducibilidad, flujos de trabajo e integración con otro software</h1>
<p class="author">José-Ignacio Antón</p>
</header>
<hr />
<p style="text-align: center;">
<a href="https://jianton.github.io/stata_index.html"><span style="color:red"><font size="4">Inicio</font></span></a>      <a href="https://jianton.github.io/stata1.html"><span style="color:red"><font size="4">Sesión 1</font></span></a>      <a href="https://jianton.github.io/stata2.html"><span style="color:red"><font size="4">Sesión 2</font></span></a>      <a href="https://jianton.github.io/stata3.html"><span style="color:red"><font size="4">Sesión 3</font></span></a>      <a href="https://jianton.github.io/stata4.html"><span style="color:red"><font size="4">Sesión 4</font></span></a>      <a href="https://jianton.github.io/stata5.html"><span style="color:red"><font size="4">Sesión 5</font></span></a>      <a href="https://jianton.github.io/stata_ejercicios.html"><span style="color:red"><font size="4">Ejercicios</font></span></a>
</p>
<hr />
<h1 id="reproducibilidad">1. Reproducibilidad</h1>
<p>En la actualidad, la reproducibilidad de nuestros resultados ocupa un lugar cada vez más importante por tres razones: * En cada vez más revistas y disciplinas, se exige que se proporcione todo el material que permita obtener los resultados presentados en los artículos. En algunas publicaciones, como <strong>American Economic Review</strong>, se dispone incluso de recursos humanos que garantizarán esta reproducibilidad (es decir, comprueban que, con los materiales provistos por los autores, se pueda llegar a sus resultados). * Tener la capacidad de reproducir nuestros resultados con un flujo de trabajo adecuado puede suponer un cierto esfuerzo en el corto plazo, pero el ahorro de tiempo a largo plazo es muy superior. * Al margen de ser un proceso intensivo en tiempo, Copiar y pegar nuestros resultados desde el programa estadístico que utilicemos es una práctica de riesgo en términos de errores.</p>
<p>Naturalmente, el estilo adoptado en el establecimiento de un flujo de trabajo tiene mucho de personal. No obstante, existen buenas prácticas y propuestas muy sólidas que podemos adoptar y de las que podemos aprender y, por qué no, incluso tratar de mejorar.</p>
<p>A continuación, nos centraremos en dos flujos de trabajo, uno de ellos, para aquellos que emplean Microsoft Word y otro, más avanzado y con un grado mucho mayor de automatización, para los que prefieren LaTeX. Como referencias generales sobre el tema podemos citar los trabajos de <span class="citation" data-cites="Christensen2018">Christensen &amp; Miguel (2018)</span> y <span class="citation" data-cites="Orozco2018">Orozco et al. (2018)</span>.</p>
<h1 id="stata-microsof-excel-microsoft-word">2. <code>Stata</code> + Microsof Excel + Microsoft Word</h1>
<figure>
<img src="flow1.png" style="width:50.0%" alt="" /><figcaption>Propuesta de flujo de trabajo (I)</figcaption>
</figure>
<p>Existen varios comandos y paquetes que nos permiten exportar nuestros resultados a Microsoft Word (o Microsoft Excel). Algunos ejemplos son <code>estout</code> (que emplearemos posteriormente) y <code>outreg</code>. Sin embargo, el formato en el que obtenemos estos resultados, aunque puede ser adecuado para explorar los resultados preliminares de nuestro trabajo, no se acerca a los estándares de forma necesarios para la publicación. En otras palabras, nos va a obligar a un trabajo adicional importante. Si tenemos que repetir el análisis con alguna modificación, vamos a tener que realizar ese esfuerzo nuevamente. Podemos encontrar información detallada sobre <code>estout</code> en varios artículos de su autor <span class="citation" data-cites="Jann2005">(Jann, 2005, p. @Jann2006)</span> y en la <a href="http://repec.sowi.unibe.ch/stata/estout/">página web</a> dedicada al paquete por este. En particular, para esta tarea vamos a emplear el comando <code>esttab</code> que incluye este paquete.</p>
<p>{{1}}</p>
<p>Obtenemos la siguiente tabla en Microsoft Word:</p>
<figure>
<img src="table5_1.png" style="width:50.0%" alt="" /><figcaption>Tabla de resultados de regresión con <code>estout</code> para MS Word</figcaption>
</figure>
<p>Empleando algunas opciones adicionales de <code>estout</code>, podemos mejorar el resultado.</p>
<p>{{2}}</p>
<figure>
<img src="table5_2.png" style="width:50.0%" alt="" /><figcaption>Tabla de resultados de regresión con <code>estout</code> para MS Word con formato</figcaption>
</figure>
<p>Desafortunadamente, existen todavía varias opciones sobre las que no tenemos control. De esta forma, si hay un cambio en la tabla, tenemos que copiar la tabla desde el documento <code>.rtf</code> y pegar la tabla en el documento donde estemos escribiendo el artículo (<code>.docx</code>). Si, por ejemplo, necesitamos cambiar el tamaño de la fuente, añadir o suprimir líneas horizontales o cambiar la alineación de las celdas, tendremos que hacerlo manualmente cada vez que hagamos esta operación.</p>
<p>Una forma de mejorar ligeramente el flujo de trabajo es exportar la tabla, con muchas más opciones de formato en Microsft Excel y, posteriomente, copiar y pegar en el documento. A través del comando <code>putexcel</code>, <code>Stata</code> puede cambiar el formato de las celdas de la hoja de cálculo. El proceso es más lento y “artesanal”, pero, en el medio plazo, ahorraremos tiempo.</p>
<pre><code>//  Creamos las dummies manualmente

. tabulate educg, generate(educdummy)
. tabulate sexo, generate(sexodummy)

//  Realizamos la primera regresión

. regress logsalario sexodummy2 edad edad2 educdummy2 educdummy3

//  Configuramos una hoja de cálculo a la que exportar los resultados

. putexcel set &quot;salarios.xlsx&quot;, replace sheet(&quot;tabla 1&quot;)

. putexcel (A1:Z100), vcenter font(timesnewroman, 10)
. putexcel A1 = &quot;Tabla 1. Regresión salarial por sexo&quot;, left vcenter font(timesnewroman, 12)
. putexcel B2 = (&quot;Total&quot;), right vcenter font(timesnewroman, 10)
. putexcel D2 = (&quot;Hombres&quot;), right vcenter font(timesnewroman, 10)
. putexcel F2 = (&quot;Mujeres&quot;), right vcenter font(timesnewroman, 10)

. local k = e(rank) - 1

. matrix R = r(table)
. matrix b = R[1,1...]
. matrix se = R[2,1...]
. matrix p = R[4,1...]

. scalar r2_a = e(r2_a)
. scalar N = e(N)

. putexcel A3 = (&quot;Mujer&quot;), left vcenter font(timesnewroman, 10)
. putexcel A5 = (&quot;Edad&quot;), left vcenter font(timesnewroman, 10)
. putexcel A7 = (&quot;Edad al cuadrado&quot;), left vcenter font(timesnewroman, 10)
. putexcel A9 = (&quot;Educación media&quot;), left vcenter font(timesnewroman, 10)
. putexcel A11 = (&quot;Educación alta&quot;), left vcenter font(timesnewroman, 10)
. putexcel A14 = (&quot;No. de observaciones&quot;), left vcenter font(timesnewroman, 10)
. putexcel A15 = (&quot;R2 ajustado&quot;), left vcenter font(timesnewroman, 10)

. forvalues i = 1(1)`k&#39; {
2.     putexcel B`=1+2*`i&#39;&#39; = (b[1,`i&#39;]), nformat(0.000) right vcenter font(timesnewroman, 10)
3.     putexcel B`=2+2*`i&#39;&#39; = (se[1,`i&#39;]), nformat((0.000)) right vcenter font(timesnewroman, 10)
4.     if p[1,`i&#39;] &lt; 0.1 {
5.         putexcel C`=1+2*`i&#39;&#39; = (&quot;*&quot;), left vcenter font(timesnewroman, 10)
6.     }
7.     if p[1,`i&#39;] &lt; 0.05 {
8.         putexcel C`=1+2*`i&#39;&#39; = (&quot;**&quot;), left vcenter font(timesnewroman, 10)
9.     }
10.     if p[1,`i&#39;] &lt; 0.01 {
11.         putexcel C`=1+2*`i&#39;&#39; = (&quot;***&quot;), left vcenter font(timesnewroman, 10)
12.     }
13. }

. putexcel B`=4 + 2*`k&#39;&#39; = N, nformat(#,###) right vcenter font(timesnewroman, 10)
. putexcel B`=5 + 2*`k&#39;&#39; = r2_a, nformat(0.000) right vcenter font(timesnewroman, 10)

. putexcel A`=7 + 2*`k&#39;&#39; = &quot;Notas: *** significativo al 1%; ** significativo al 5%; significativo al 10%. Errores estándar entre paréntesis. Todos los modelos incluyen una constante.&quot;,  left vcenter font(timesnewroman, 10)
. putexcel A`=8 + 2*`k&#39;&#39; = &quot;Fuente: Elaboración propia a partir de la ECV2018&quot;, left vcenter font(timesnewroman, 10)

//  Repetimos el procedimiento con los hombres

. regress logsalario edad edad2 educdummy2 educdummy3 if sexo == 1

. local k = e(rank) - 1

. matrix R = r(table)
. matrix b = R[1,1...]
. matrix se = R[2,1...]
. matrix p = R[4,1...]

. scalar r2_a = e(r2_a)
. scalar N = e(N)

. forvalues i = 1(1)`k&#39; {
2.     putexcel D`=3+2*`i&#39;&#39; = (b[1,`i&#39;]), nformat(0.000) right vcenter font(timesnewroman, 10)
3.     putexcel D`=4+2*`i&#39;&#39; = (se[1,`i&#39;]), nformat((0.000)) right vcenter font(timesnewroman, 10)
4.     if p[1,`i&#39;] &lt; 0.1 {
5.         putexcel E`=3+2*`i&#39;&#39; = (&quot;*&quot;), left vcenter font(timesnewroman, 10)
6.     }
7.     if p[1,`i&#39;] &lt; 0.05 {
8.         putexcel E`=3+2*`i&#39;&#39; = (&quot;**&quot;), left vcenter font(timesnewroman, 10)
9.     }
10. if p[1,`i&#39;] &lt; 0.01 {
11.     putexcel E`=3+2*`i&#39;&#39; = (&quot;***&quot;), left vcenter font(timesnewroman, 10)
12.     }
13. }

. putexcel D`=6 + 2*`k&#39;&#39; = N, nformat(#,###) right vcenter font(timesnewroman, 10)
. putexcel D`=7 + 2*`k&#39;&#39; = r2_a, nformat(0.000) right vcenter font(timesnewroman, 10)

//  Repetimos el procedimiento con las mujeres

. regress logsalario edad edad2 educdummy2 educdummy3 if sexo == 2

. local k = e(rank) - 1

. matrix R = r(table)
. matrix b = R[1,1...]
. matrix se = R[2,1...]
. matrix p = R[4,1...]

. scalar r2_a = e(r2_a)
. scalar N = e(N)

. forvalues i = 1(1)`k&#39; {
2.     putexcel F`=3+2*`i&#39;&#39; = (b[1,`i&#39;]), nformat(0.000) right vcenter font(timesnewroman, 10)
3.     putexcel F`=4+2*`i&#39;&#39; = (se[1,`i&#39;]), nformat((0.000)) right vcenter font(timesnewroman, 10)
4.     if p[1,`i&#39;] &lt; 0.1 {
5.         putexcel G`=3+2*`i&#39;&#39; = (&quot;*&quot;), left vcenter font(timesnewroman, 10)
6.     }
7.     if p[1,`i&#39;] &lt; 0.05 {
8.         putexcel G`=3+2*`i&#39;&#39; = (&quot;**&quot;), left vcenter font(timesnewroman, 10)
9.     }
10. if p[1,`i&#39;] &lt; 0.01 {
11.     putexcel G`=3+2*`i&#39;&#39; = (&quot;***&quot;), left vcenter font(timesnewroman, 10)
12.     }
13. }

. putexcel F`=6 + 2*`k&#39;&#39; = N, nformat(#,###) right vcenter font(timesnewroman, 10)
. putexcel F`=7 + 2*`k&#39;&#39; = r2_a, nformat(0.000) right vcenter font(timesnewroman, 10)

//  Cerramos la sesión de putexcel

. putexcel close</code></pre>
<p>Para implementar esta estrategia, primero, creamos en nuestro documento de MS Word el esqueleto de la tabla. En segundo lugar, copiamos las celdas con la información estadística del archivo de MS Excel. Por últimpo, pegamos las celdas copiadas en el documento de MS Word mediante la opción del menú <code>Pegado especial</code> <span class="math inline">\(\rightarrow\)</span> <code>Formato RTF</code>. Es un método lento, pero muy flexible, que puede ser ideal para proporcionar los resultados a los evaluadores y la reproducibilidad total.</p>
<figure>
<img src="putexcel.png" style="width:90.0%" alt="" /><figcaption>Ejemplo de uso de <code>putexcel</code> con MS Word</figcaption>
</figure>
<h1 id="stata-latex">3. <code>Stata</code> + LaTeX</h1>
<figure>
<img src="flow2.png" style="width:50.0%" alt="" /><figcaption>Propuesta de flujo de trabajo (II)</figcaption>
</figure>
<p>Una opción excelente para configurar nuestro flujo de trabajo es utilizar <a href="https://es.wikipedia.org/wiki/LaTeX">LaTeX</a> para escribir nuestros textos. Es un sistema de composición de textos de código abierto que emplea comandos de TeX, un lenguaje de nivel bajo con comandos muy elementales. La principal desventaja de LaTeX es que no se trata de un procesador WYSIWYG (“lo que ves es lo que obtienes”), sino que se basa en instrucciones. Esto implica que el contenido está separado de la forma, lo cual puede ser una ventaja. Como el contenido es básicamente texto plano, podemos integrar output en texto plano que obtengamos de otros programas, como <code>Stata</code>. La gran ventaja de LaTeX es la altísima calidad de los documentos, especialmente apreciable en trabajos que requieran el empleo de fórmulas matemáticas. Por esta razón, es una herramienta de edición profesional. Otras ventajas, no exclusivas de este sistema, se refieren a la gestión de la bibliografía.</p>
<p>La integración de <code>Stata</code> y LaTeX en nuestro flujo de trabajo es sencilla. Requerimos únicamente una distribución y un editor de TeX y generar resultados e incluso fragmentos de texto que puedan ser directamente incluidos en LaTeX. Las principales distribuciones de TeX son <a href="https://miktex.org/">MiKTeX</a> y <a href="https://www.tug.org/texlive/">TeX Live</a>. Existen muchos editores de TeX gratuitos, como <a href="https://www.texstudio.org/">TeXStudio</a>, <a href="https://www.xm1math.net/texmaker/">Texmaker</a> o <a href="https://www.lyx.org/">LyX</a>. Mediante alguna herramienta como <a href="https://www.dropbox.com">Dropbox</a> o <a href="https://www.google.es/drive/">Google Drive</a> podemos lograr un muy buen sistema de trabajo reproducible colaborativo.</p>
<p>Otra opción es optar por Resultados de <a href="https://www.overleaf.com/">Overleaf</a>. Se trata un editor online que incorpora la distribución de TeX Live. No requiere instalar ninguna distribución ni editor en nuestro equipo, permite la colaboración en tiempo real (como Google Docs, al contrario que Dropbox) e incluye control de versiones. Existe una versión gratuita, en la que algunas de sus capacidades no están disponibles. Debido a que no requiere instalación local, lo emplearemos en los siguientes ejemplos, aunque hagan que el flujo de trabajo sea menos fluido que con una instalación local, ya que, además, no disponemos de la versión de pago (que incluye la sincronización con Dropbox y GitHub, un sistema de control de versiones que comentaremos en la siguiente sección).</p>
<p>Para poner en marcha este tipo de flujo, vamos a emplear el paquete <code>estout</code>, mencionado en la sección anterior, y el paquete paquete texdoc <span class="citation" data-cites="Jann2016">(Jann, 2016)</span>, que nos va a pemitir crear textos planos con resultados de <code>Stata</code> que vamos a poder llevar a nuestro editor de LaTeX. La idea básica es que <code>Stata</code> genere archivos de texto plano reconocibles por LaTeX y almacenarlos en una carpeta de nuestro proyecto. Posteriormente, en el editor de LaTeX, utilizaremos el comando <code>input{}</code> para incluir el archivo generado. La mayor parte del formato resultante del texto incluido será responsabilidad de LaTeX, que habremos configurado previamente. En general, mi consejo es únicamente crear en <code>Stata</code> de las filas con la información estadística y diseñar el resto de la tabla en el editor de LaTeX.</p>
<p>{{3}}</p>
<p>{{4}}</p>
<p>Podemos ver que la tabla de LaTeX generada es extremadamente simple.</p>
<figure>
<img src="tableplain.png" style="width:50.0%" alt="" /><figcaption>Tabla generada por <code>Stata</code> con <code>estout</code></figcaption>
</figure>
<p>A continuación, calculamos unos estadísticos descriptivos, los almacenamos en macros y exportamos un texto que las contiene al archivo <code>texto.tex</code></p>
<p>{{5}}</p>
<figure>
<img src="textplain.png" style="width:50.0%" alt="" /><figcaption>Texto generada por <code>Stata</code> con <code>texdoc</code></figcaption>
</figure>
<p>Por último, podemos generar un gráfico en formato <code>.pdf</code>, que es muy apropiado para exportar a LaTeX.</p>
<p>{{6}}</p>
<p>{{7}}</p>
<figure>
<img src="figure.png" style="width:30.0%" alt="" /><figcaption>Texto generada por <code>Stata</code> para insertar en LaTeX</figcaption>
</figure>
<p>A continuación, en nuestro editor de LaTeX, donde habremos preparado el espacio para incluir los elementos generados, incluimos los archivos anteriores con el comando <code>\input{}</code> para la tabla y el texto e <code>\includegraphics{}</code> para la figura en <code>.pdf</code>. Como en este ejemplo estamos usando Overleaf (y no disponemos de sus características de pago), tenemos que subir los archivos a la carpeta correspondiente en la aplicación. Si utilizásemos un editor instalado localmente, simplemente, en el archivo <code>.tex</code> nos referiríamos a su ruta local de la tabla, el texto y los gráficos. El archivo principal que representan nuestro documento se llama <code>main.tex</code>.</p>
<figure>
<img src="tabletex.png" style="width:70.0%" alt="" /><figcaption>Documento LaTeX en Overleaf con resultados de <code>Stata</code></figcaption>
</figure>
<p>Por último, cabe mencionar la facilidad de gestión de referencias bibliográficas con programas gratuitos como <a href="https://www.jabref.org/">JabRef</a>, <a href="https://www.mendeley.com/">Mendeley</a> o <a href="https://www.zotero.org/">Zotero</a>, que pueden utilizarse, además, con otro tipo de aplicaciones para procesar textos. Los recursos disponibles en la red para el aprendizaje de LaTeX, que es, fundamentalmente, un proceso <em>learning by doing</em>, son realmente inabarcables. Una buena referencia inicial para Ciencias Sociales podría ser <span class="citation" data-cites="Frain2014">Frain (2014)</span>.</p>
<h1 id="documentos-dinámicos-y-otras-posibilidades">4. Documentos dinámicos y otras posibilidades</h1>
<p>Una de las últimas novedades en el uso de <code>Stata</code> pasan por la elaboración de documentos dinámicos. Se trata de archivos, normalmente, <code>.docx</code>, <code>.pdf</code> o <code>.html</code> que incluyen texto, comandos y resultados. Su carácter dinámico se explica porque, cuando modificamos los comandos, el documento resultante refleja los cambios en los resultados. Su principal utilidad puede ser crear informes preliminares de resultados, presentaciones, páginas webs sencillas o, incluso, algunas personas lo utilizan para escribir trabajos de investigación completos. No obstante, en relación con esta última opción, <code>Stata</code> está lejos todavía de las posibilidades que ofrece R con RStudio y knitr <span class="citation" data-cites="Gandrud2020">(Gandrud, 2020, p. @Xie2015)</span>.</p>
<p>En el caso de <code>Stata</code>, existen varias opciones para elaborar documentos dinámicos. La versión 15 de <code>Stata</code> incorpora esta posibilidad dentro del paquete <code>dyndoc</code>. Sin embargo, hay otras alternativas creadas por los usuarios. Para generar todas las páginas web en las que se ha organizado este curso, por ejemplo, hemos utilizado el paquete <code>markstat</code> <span class="citation" data-cites="Rodriguez2017">(Rodríguez, 2017)</span>. En mi opinión, esta opción es preferible al paquete oficial porque es mucho más parecido al lenguage <a href="https://es.wikipedia.org/wiki/Markdown">Markdown</a>. En su página web, el creador de <code>markstat</code>, Germán Rodríguez, nos orienta de las posibilidades de este paquete, con abundantes ejemplos.</p>
<p>En <code>Stata 16</code>, además, existe la pobilidad de integrar código de <a href="https://www.stata.com/new-in-stata/python-integration/">Python en <code>Stata</code></a> y código de <a href="https://medium.com/@my7eciel/stata-within-python-4cc3172b1ccd"><code>Stata</code> en Python</a>.</p>
<p>Por último, una tendencia reciente es el empleo de sistemas control de versiones, como <code>Git</code>, especialmente, a través de la nube con <code>GitHub</code>. La curva de aprendizaje puede reducirse sustancialmente instalando <a href="https://desktop.github.com/"><code>GitHub Desktop</code></a>. Básicamente, este sistema permite trabajar de manera colaborativa en la escritura de código. En el caso de <code>Stata</code>, es aplicable, por lo tanto, a los archivos <code>.do</code> y <code>.ado</code>. Permite que varias personas trabajen de forma simultánea (e incluso cualquier usuario puede solicitar contributir) y todos los cambios son reversibles, pudiendo volver en cualquier momento a la versión que deseemos. Podemos encontrar una buena introducción en <span class="citation" data-cites="Pellegrina2018">Pellegrina &amp; Fajardo (2018)</span>.</p>
<figure>
<img src="github.png" style="width:70.0%" alt="" /><figcaption>Flujo de trabajo propuesto por <span class="citation" data-cites="Pellegrina2018">Pellegrina &amp; Fajardo (2018)</span></figcaption>
</figure>
<h1 id="references">References</h1>
<p>{{8}}</p>
<div id="refs" class="references hanging-indent" role="doc-bibliography">
<div id="ref-Christensen2018">
<p>Christensen, G., &amp; Miguel, E. (2018). Transparency, reproducibility, and the credibility of Economics research. <em>Journal of Economic Literature</em>, <em>56</em>(3), 920–980. <a href="https://doi.org/10.1257/jel.20171350">https://doi.org/10.1257/jel.20171350</a></p>
</div>
<div id="ref-Frain2014">
<p>Frain, J. C. (2014). <em>Applied LaTeX for Economists, Social Scientists and others</em> (Trinity Economics Paper Nos. 214). Trinity College Dublin, Department of Economics. <a href="https://www.tcd.ie/Economics/TEP/2014/TEP0214.pdf">https://www.tcd.ie/Economics/TEP/2014/TEP0214.pdf</a></p>
</div>
<div id="ref-Gandrud2020">
<p>Gandrud, C. (2020). <em>Reproducible research with R and RStudio</em> (3rd ed.). CRC Press.</p>
</div>
<div id="ref-Jann2005">
<p>Jann, B. (2005). Making regression tables from stored estimates. <em>Stata Journal</em>, <em>3</em>(5), 288–308.</p>
</div>
<div id="ref-Jann2016">
<p>Jann, B. (2016). Creating LaTeX documents from within Stata using texdoc. <em>Stata Journal</em>, <em>2</em>(16), 245–266.</p>
</div>
<div id="ref-Orozco2018">
<p>Orozco, V., Bontemps, C., Maigné, E., Piguet, V., Hofstetter, A., Lacroix, A., Levert, F., &amp; Rousselle, J.-M. (2018). <em>How to make a pie: Reproducible research for empirical Economics &amp; Econometrics</em> (Toulouse School of Economics Working Paper Nos. 933). Touluse School of Economics; TSE Working Paper.</p>
</div>
<div id="ref-Pellegrina2018">
<p>Pellegrina, H. S., &amp; Fajardo, A. F. (2018). <em>A brief introduction to GitHub for Social Scientists using Stata and Dropbox</em>. <a href="https://github.com/hpellegrina/hello-world-econ/blob/master/documentation/github-manual.pdf">https://github.com/hpellegrina/hello-world-econ/blob/master/documentation/github-manual.pdf</a></p>
</div>
<div id="ref-Rodriguez2017">
<p>Rodríguez, G. (2017). Literate data analysis with Stata and Markdown. <em>Stata Journal</em>, <em>3</em>(17), 600–618.</p>
</div>
<div id="ref-Xie2015">
<p>Xie, Y. (2015). <em>Dynamic documents with R and knitr</em> (2nd ed.). CRC Press.</p>
</div>
</div>
</body>
</html>
